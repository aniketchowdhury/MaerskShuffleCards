{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","colorList","useState","mainArr","setMainArr","className","style","display","flexWrap","width","height","alignContent","map","item","index","backgroundColor","max","Math","floor","random","flexGrow","flexDirection","border","margin","color","fontSize","fontWeight","onClick","randomIndex","array","currentIndex","length","borderRadius","borderBottom","arr","sort","marginTop","textAlign","fontStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAkDeA,MA/Cf,WACE,IACIC,EAAY,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACxE,EAA6BC,mBAFrB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAEzB,mBAAOC,EAAP,KAAgBC,EAAhB,KAsBA,OACE,eAAC,WAAD,WACA,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,eAElB,qBAAKA,UAAU,kBAAkBC,MAAO,CAACC,QAAQ,OAAQC,SAAS,OAAOC,MAAM,OAAQC,OAAO,OAAQC,aAAa,cAAnH,SACKR,EAAQS,KAAI,SAACC,EAAMC,GAAP,OACX,qBAAKT,UAAU,aAAaC,MAAO,CAACS,gBAAgBd,GA5BxCe,EA4B+D,EA3B5EC,KAAKC,MAAMD,KAAKE,SAAWH,KA2BqDI,SAAS,IAAKb,QAAQ,OAAQc,cAAc,SAAUC,OAAO,kBAAmBb,MAAM,MAAOC,OAAO,OAAnL,SACE,qBAAKJ,MAAO,CAACiB,OAAO,OAAQC,MAAM,QAAQC,SAAS,QAASC,WAAW,OAAvE,SAAgFb,KAD8GC,GA5B1M,IAAsBE,OAiClB,sBAAKV,MAAO,CAACC,QAAQ,OAAQc,cAAc,SAASE,OAAO,aAA3D,UACE,wBAAQI,QA/Bd,WAIE,IAHA,IACkCC,EAD9BC,EAAK,YAAO1B,GACZ2B,EAAeD,EAAME,OAElB,IAAMD,GAAc,CACzBF,EAAcX,KAAKC,MAAMD,KAAKE,SAAWW,GACzCA,IAFyB,MAGmB,CAC1CD,EAAMD,GAAcC,EAAMC,IAD3BD,EAAMC,GAHkB,KAGHD,EAAMD,GAHH,KAM3BxB,EAAWyB,IAqBmBvB,MAAO,CAACG,MAAM,OAAQC,OAAO,OAAQsB,aAAa,MAAOjB,gBAAgBd,EAAU,GAAIgC,aAAa,oBAAoBT,MAAM,SAAxJ,qBACA,wBAAQG,QAnBH,WACT,IAAIO,EAAG,YAAO/B,GACd+B,EAAIC,OACJ/B,EAAW8B,IAgBgB5B,MAAO,CAACG,MAAM,OAAQC,OAAO,OAAOsB,aAAa,MAAOI,UAAU,OAAOrB,gBAAgBd,EAAU,GAAGgC,aAAa,oBAAoBT,MAAM,SAApK,wBAGJ,qBAAKlB,MAAO,CAAC+B,UAAU,SAAUD,UAAU,OAAQE,UAAU,UAA7D,4CCjCWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84e1dd02.chunk.js","sourcesContent":["import './App.css';\nimport {React, useState, Fragment} from \"react\";\n\nfunction App() {\n  let arr=[1,2,3,4,5,6,7,8,9];\n  let colorList = [\"#72c3dc\", \"#2b8ead\", \"#6f98a8\", \"#bfbfbf\", \"#2f454e\", \"#333333\"]\n  const [mainArr, setMainArr]= useState(arr);\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  function shuffle() {\n    let array = [...mainArr];\n    var currentIndex = array.length,  randomIndex;\n  \n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    setMainArr(array)\n  }\n\n  const sort=()=>{\n    let arr = [...mainArr];\n    arr.sort();\n    setMainArr(arr);\n  }\n  return (\n    <Fragment>\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <div className=\"numberContainer\" style={{display:\"flex\", flexWrap:\"wrap\",width:\"auto\", height:\"auto\", alignContent:\"flex-start\"}}>\n          {mainArr.map((item, index)=>(\n            <div className=\"numberTile\" style={{backgroundColor:colorList[getRandomInt(5)],flexGrow:\"1\", display:\"flex\", flexDirection:\"column\", border:\"1px solid black\", width:\"25%\", height:\"35%\"}} key={index}>\n              <div style={{margin:\"auto\", color:\"white\",fontSize:\"100px\", fontWeight:\"600\"}}>{item}</div>\n              </div>\n          ))}\n      </div>\n      <div style={{display:\"flex\", flexDirection:\"column\",margin:\"30px auto\"}}>\n        <button onClick={shuffle} style={{width:\"20vw\", height:\"3rem\", borderRadius:\"7px\", backgroundColor:colorList[0], borderBottom:\"5px solid #2b8ead\",color:\"white\"}}>Shuffle</button>\n        <button onClick={sort} style={{width:\"20vw\", height:\"3rem\",borderRadius:\"7px\", marginTop:\"30px\",backgroundColor:colorList[0],borderBottom:\"5px solid #2b8ead\",color:\"white\"}}>Sort</button>\n      </div>\n    </div>\n    <div style={{textAlign:\"center\", marginTop:\"50px\", fontStyle:\"italic\"}}>Shuffle and sort by Aniket</div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}